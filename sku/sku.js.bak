function SkuSelector(attrs,skus){
  this.cats={};
  this.attrs={};
  this.skus={};
  this.oriAttrs=attrs;
  this.oriSkus=skus;
  this.parseAttr();
  this.parseSKU();
}
SkuSelector.prototype.parseAttr=function(){
  var item;
  var attrs=this.oriAttrs;
  var cats=this.cats;
  var _attrs=this.attrs;
  for(var i=0,len=attrs.length;i<len;i++){
    item=attrs[i];
    cats[item['id']]=item;
    var values=item.attrValues;
    for(var j=0,jlen=values.length;j<jlen;j++){
      values[j].catid=item['id']
      _attrs[values[j].id]=values[j];
    }
  }
}

SkuSelector.prototype.parseSKU=function(){
  var skus=this.oriSkus;
  var _skus=this.skus;
  var _attrs=this.attrs;
  var item;
  for(var k in skus){
    item=skus[k];
    var arr=k.split('_').filter(function (e,i){return !!e;});
    if(item.stockNum<=0){
      continue;
    }
    item.path=arr;
    _skus[item.id]=item;
    console.log(item.id,arr);
    for(var i=0,len=arr.length;i<len;i++){
      _attrs[arr[i]].skus=_attrs[arr[i]].skus||{};
      _attrs[arr[i]].skus[item.id]=item;
    }
  }
}

SkuSelector.prototype.updateSKU=function(attrids){
  console.log('------------------------------------');
  console.log('updateSKU',attrids);
  var _attrs=this.attrs;
  var cats=this.cats;
  var skus,_skus;
  var enabled_attrs={};
  var enabled_attrs0={};
  var remainskus=this.skus;
  var that=this;
  var disabledskus={};
  var disabledattrs={};
  for(var i=0,len=attrids.length;i<len;i++){
    //当前属性,不可用的sku,对其他行属性的影响:
    attrid=attrids[i];
    console.log('---------------------attrid:',attrid)
    var attr=_attrs[attrid];
    skus=attr['skus'];
    var curcat=cats[attr.catid];
    var lastskus=JSON.parse(JSON.stringify(remainskus));
    var __attrs=this.collectEnabledAttrs(lastskus);
    console.log('before\t',JSON.stringify(__attrs));
    remainskus=setAndSet(remainskus,skus);
    var __attrs2=this.collectEnabledAttrs(remainskus);
    console.log('after\t',JSON.stringify(__attrs2));
    var __diff=setSubSet(__attrs,__attrs2);
    console.log('diff\t',JSON.stringify(__diff));
    disabledattrs=setOrSet(disabledattrs,pickupAttrs(__diff,attrid));
    //disabledskus=setSub.effectOtherAttrs(disabledskus,attrid);
  }     
  console.log('disabledattrs',disabledattrs);
  this.disabledAttrs=disabledattrs;
  this.enabledAttrs=setSubSet(this.attrs,disabledattrs);
  console.log('------------------------------------');
  return;
  function pickupAttrs(obj,id){
    var catid=getAttrCat(id);
    var ids={};
    for(var k in obj){
      if(getAttrCat(k)!=catid){
        ids[k]=1;
      }
    }
    console.log('pickup------',obj,id,ids);
    return ids;
  }
  function getAttrCat(id){
    return that.attrs[id].catid; 
  }
}
SkuSelector.prototype.getDisabledAttrs=function(){
  return this.disabledAttrs;
}
SkuSelector.prototype.getEnabledAttrs=function(){
  return this.enabledAttrs;
}

SkuSelector.prototype.addToEnabledAttrs=function(cat,enabled_attrs){
  var values=cat.attrValues;
  for(var i=0,len=values.length;i<len;i++){
    enabled_attrs[values[i].id]=1;
  }
}

SkuSelector.prototype.collectEnabledAttrs=function(skus,enabled_attrs){
  var tmp=enabled_attrs||{};
  for(var k in skus){
    var sku=this.skus[k];
    var path=sku.path;
    //console.log('path',path);
    for(var index in path){
      //console.log(path[index],tmp);
      tmp[path[index]]=1;
    }
  }
  return tmp;
}

function setAndSet(a,b){
  var obj={};
  for(var i in a){
    if(b[i]){
      obj[i]=1;
    }
  }
  return obj;
}
function setOrSet(a,b){
  var obj={};
  for(var i in a){
    obj[i]=1;
  }
  for(var i in b){
    obj[i]=1;
  }
  return obj;
}
function setSubSet(a,b){
  var obj={};
  for(var i in a){
    if(!b[i]){
      obj[i]=1;
    }
  } 
  return obj;
}
module.exports=SkuSelector;
